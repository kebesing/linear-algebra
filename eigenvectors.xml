<?xml version="1.0" encoding="UTF-8" ?>

<!-- This file is part of the workbook                        -->
<!--                                                          -->
<!--    Math 2500: Linear Algebra                             -->
<!--                                                          -->
<!-- Copyright (C) 2014  Theron J. Hitchman                   -->
<!-- See the file COPYING for copying conditions.             -->


<section xml:id="section-eigenvectors">
  <title>Eigenvectors and Eigenvalues</title>

  <subsection>
    <title>The assignment</title>
    <ul>
      <li>Read section 6.1 of Strang (pages 283-292).</li>
      <li>Read the following and complete the exercises below.</li>
    </ul>
  </subsection>

  <subsection>
    <title>Discussion: Eigenvalues and Eigenvectors</title>
    <p>
      We have discussed the <q>transformational view</q> of the geometry of a
      system of <m>m</m> linear equations <m>Ax = b</m> in <m>n</m> unknowns
      <m>x</m>, where we view the <m>m \times n</m> matrix <m>A</m> as defining
      a function from <m>\mathbb{R}^m</m> to <m>\mathbb{R}^n</m>. In the case of
      a square matrix <m>m=n</m>, the domain and the target are the same space
      <m>\mathbb{R}^n</m>. So we can think of <m>A</m> as making a function from
      one space to itself.
    </p>
    <p>
      This means it might be interesting to think about how <m>A</m> moves a
      vector about inside of <m>\mathbb{R}^n</m>. Usually, the vector <m>v</m>
      will get turned into a vector <m>Av</m> which has a different length and
      points in a completely different direction. But sometimes, <emph>sometimes</emph>,
      <m>v</m> and <m>Av</m> will point in the same direction. This is an eigenvector.
    </p>
    <p>
      A number <m>\lambda</m> is called an <term>eigenvalue</term> of the matrix
      <m>A</m> when the matrix <m>A-\lambda I</m> is singular. A vector <m>v</m>
      is called an <term>eigenvector</term> of <m>A</m> corresponding to <m>\lambda</m>
      when <m>v</m> is not zero but still lies in the null space of <m>A-\lambda I</m>.
      We exclude <m>0</m> from being an eigenvector because it is boring. The
      zero vector lies in every subspace, including the nullspace of any matrix.
    </p>
    <p>
      As Strang discusses, the eigenvalues are found as roots of the
      <term>characteristic polynomial</term> <m>\det(A-\lambda \cdot I) = 0</m>.
      That's right, we only need to find the roots of a polynomial! Sounds great,
      but as a general thing this is pretty hard. Don't get too excited. Have you
      heard this fact before? It is both depressing and interesting: there is no
      general formula to find the roots of a polynomial of degree 5 or more.
    </p>
  </subsection>
  <subsection>
    <title>Sage and Eigenvectors</title>
    <p>
      Since eigenvalues and eigenvectors are found using standard techniques, we
      can use Sage to compute them without any new techniques.
    </p>


    <subsubsection>
      <title>Using Nullspaces and root finding commands</title>
      <p>
        Let's use basic sage commands we have seen before to compute eigenvalues
        and eigenvectors. We start by finding the characteristic polynomial of
        the mundane example matrix <m>X</m> below.
      </p>
      <sage>
        <input>
          X = matrix(QQ, 3,3, [1,2,3,4,5,6,7,8,9])
          X
        </input>
        <output>
          [1 2 3]
          [4 5 6]
          [7 8 9]
        </output>
      </sage>
      <sage>
        <input>
          t = var('t')
          poly = (X - t*identity_matrix(3)).determinant()
          poly
        </input>
        <output>
          -((t - 5)*(t - 9) - 48)*(t - 1) + 29*t + 3
        </output>
      </sage>
      <p>
        Now we need the roots of that polynomial. Sage has a simple built-in for
        that, which returns a list of pairs: (root, multiplicity).
      </p>
      <sage>
        <input>
          poly.roots()
        </input>
        <output>
          [(-3/2*sqrt(33) + 15/2, 1), (3/2*sqrt(33) + 15/2, 1), (0, 1)]
        </output>
      </sage>
      <p>
        In this case each of the three roots has (algebraic) multiplicity equal
        to one. For now, we will look at just the first one. Let's pull it out of
        this list, give it a more convenient name, and use it to find a corresponding
        eigenvector.
      </p>
      <sage>
        <input>
          lam = poly.roots()[0][0]
          V = (X - lam * identity_matrix(3)).right_kernel()
          V
        </input>
      </sage>
      <p>
        So, that looks like a mess. We can get Sage to display the basis vector
        more nicely. This is our eigenvector.
      </p>
      <sage>
        <input>
          show(V.basis()[0])
        </input>
      </sage>
      <p>Well, that probably needs a simplification or two. But there it is!</p>
    </subsubsection>
    <subsubsection>
      <title>Built-in Sage Commands</title>
      <p>
        Sage has useful built-in commands that get at the same computations. But
        for them to work, your matrix must be defined over a set of numbers that
        is big enough to take roots of polynomials. We will use <c>AA</c>, which
        stands for the <emph>real algebraic numbers</emph>.
      </p>
      <sage>
        <input>
          A = matrix(AA, 4,4, [3,134,-123,4, 2,1,34,4, 2,36,54,7, 0,0,3,1])
          A
        </input>
        <output>
          [   3  134 -123    4]
          [   2    1   34    4]
          [   2   36   54    7]
          [   0    0    3    1]
        </output>
      </sage>
      <sage>
        <input>A.characteristic_polynomial()</input>
        <output>x^4 - 59*x^3 - 990*x^2 + 18135*x - 14675</output>
      </sage>
      <sage>
        <input>A.eigenvalues()</input>
      </sage>
      <p>The eigenvectors can be computed with this command, which again returns
        pairs: (eigenvalue, eigenvector).
      </p>
      <sage>
        <input>A.eigenvectors_right()</input>
      </sage>
      <p>
        Or you can ask for the <term>eigenspaces</term> which return pairs:
        (eigenvalue, subspace consisting of all eigenvectors which correspond).
      </p>
      <sage>
        <input>A.eigenspaces_right()</input>
      </sage>
    </subsubsection>
    <subsubsection>
      <title>One more example...</title>
      <sage>
        <input>
          B = matrix(AA, 2,2, [5,1,0,5])
          B
        </input>
        <output>
          [5 1]
          [0 5]
        </output>
      </sage>
      <p>This matrix has only one eigenvalue, but it has algebraic multiplicity 2.</p>
      <sage>
        <input>B.eigenvalues()</input>
        <output>[5, 5]</output>
      </sage>
      <p>But 5 has <term>geometric multiplicity</term> only equal to one, because the corresponding
        eigenspace has dimension one.
      </p>
      <sage>
        <input>B.eigenvectors_right()</input>
      </sage>
      <sage>
        <input>B.eigenspaces_right()</input>
      </sage>
    </subsubsection>
  </subsection>

  <subsection>
    <title>Questions for Section 6.1</title>

    <task>
      <statement>Exercise 5 from section 6.1 of Strang.
      </statement>
    </task>

    <task>
      <statement>Exercise 6 from section 6.1 of Strang.
      </statement>
    </task>

    <task>
      <statement>Exercise 7 from section 6.1 of Strang.
      </statement>
    </task>

    <task>
      <statement>Exercise 12 from section 6.1 of Strang.
      </statement>
    </task>

    <task>
      <statement>Exercise 14 from section 6.1 of Strang.
      </statement>
    </task>

    <task>
      <statement>Exercise 19 from section 6.1 of Strang.
      </statement>
    </task>
  </subsection>


</section>
